// Generated by CoffeeScript 1.7.1
(function() {
  var BnfParser, Generator, GrammarParser,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  BnfParser = require('./BnfParser');

  GrammarParser = require('./GrammarParser');

  Generator = (function(_super) {
    __extends(Generator, _super);

    function Generator(bnf) {
      Generator.__super__.constructor.call(this, bnf);
    }

    Generator.prototype.generate = function() {
      this.generateListRules();
      return new GrammarParser(this.tokenRules, this.rules);
    };

    Generator.prototype.generateListRules = function() {
      var node, _i, _len, _ref, _results;
      this.tokenRules = {};
      this.rules = {};
      _ref = this.ast.nodes;
      _results = [];
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        node = _ref[_i];
        if (node.type === "rule") {
          this.rules[node.name] = node.nodes[0];
        }
        if (node.type === "tokenRule") {
          _results.push(this.tokenRules[node.name] = node.nodes[0]);
        } else {
          _results.push(void 0);
        }
      }
      return _results;
    };

    return Generator;

  })(BnfParser);

  module.exports = Generator;

}).call(this);
